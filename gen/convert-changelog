#!/usr/bin/perl
use strict;
use warnings;
use Data::Dumper;

my $format = shift;

my @changelog_entries;

{
	my %entry;
	my $expecting_blank = 0;
	print "reading input\n";
	while(<>) {
		if ( /^([a-z0-9-]+) \(([^)]+)\)/ ) {
			$entry{'name'} = $1;
			$entry{'version'} = $2;
			$expecting_blank = 1;
		}
		if ( /^ -- ([^>]*>)  (.*)$/ ) {
			$entry{'author'} = $1;
			$entry{'date'} = $2;
			my %newentry = %entry;
			push @changelog_entries, \%newentry;
			%entry = ();
		}
		if ( /^  (.*)$/ ) {
			$entry{'message'} .= "$1\n"
		}
	}
}

if ($format eq "rpm") {
	foreach my $entry_ref (@changelog_entries) {
		my %entry = %$entry_ref;
		my $date = $entry{'date'};
		$date = `LANG=en_US gdate --date="$date" +"%b %d %Y"`;
		chomp $date;

		my @lines = split /^/m, $entry{'message'};
		for (my $i = 0, $_ = $lines[0]; $i < @lines ; $i++, $_ = $lines[$i]) {
			chomp;

			if ( /^\s*\* (.*)$/ ) {
				$lines[$i] = "-   $1";
			} elsif ( /^\s+(.*)$/ ) {
				$lines[$i] = "- $1";
			} else {
				$lines[$i] = "- $_";
			}
			chomp $lines[$i];
		}
		my $message = join "\n", @lines;
		$message =~ s/\n+/\n/gm;

		print "* $date $entry{'author'} $entry{'version'}\n";
		print "$message\n\n";
	}
} elsif ($format eq "choco") {

} elsif ($format eq "markdown") {
} else {
	print Dumper(@changelog_entries);
}
